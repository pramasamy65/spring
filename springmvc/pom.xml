<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>springmvc</artifactId>
	<name>springmvc</name>
	<description>springmvc</description>
	<packaging>jar</packaging>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.2.RELEASE</version>
	</parent>

	<properties>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<!--spring-boot-starter-web: includes all the dependencies required to 
				create a web app. This will avoid lining up different spring common project 
				versions. -->
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- spring-boot-starter-tomcat: enable an embedded Apache Tomcat 7 instance, 
			by default. We have overriden this by defining our version. This can be also 
			marked as provided if you wish to deploy the war to any other standalone 
			tomcat -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<!-- tomcat-embed-jasper: provides support for .jsp file rendering. -->
			<scope>provided</scope>
			<!-- Compile means that you need the JAR for compiling and running the 
				app. For a web application, as an example, the JAR will be placed in the 
				WEB-INF/lib directory -->

			<!-- Provided means that you need the JAR for compiling, but at run time 
				there is already a JAR provided by the environment(JDK/Container) so you 
				don't need it packaged with your app. For a web app, this means that the 
				JAR file will not be placed into the WEB-INF/lib directory. -->

			<!-- RUNTIME - This scope indicates that the dependency is not required 
				for compilation, but is for execution -->

		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>